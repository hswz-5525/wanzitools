name: Docker Build and Push

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep 'version:' config.yaml | cut -d'"' -f2 || echo "latest")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/wanzitools:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/wanzitools:${{ env.VERSION }}
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wanzitools:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wanzitools:buildcache,mode=max

      - name: Build and push Go service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.go
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/wanzitools-go:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/wanzitools-go:${{ env.VERSION }}
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wanzitools-go:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wanzitools-go:buildcache,mode=max

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true 